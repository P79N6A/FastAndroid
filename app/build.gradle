apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.apache.fastandroid"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        //dex突破65535的限制
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }



    signingConfigs {
        buildVersion {
            storeFile file('Camry')
            storePassword '123456789'
            keyAlias 'tcl'
            keyPassword '123456789'

        }
        gp { // 外发包 签名
            storeFile file('hawkSog')
            storePassword 'HAWK19930721'
            keyAlias 'hawk_sog'
            keyPassword 'HAWK19930721'
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            buildConfigField("boolean","LOG_DEBUG","false")
            buildConfigField("String","BUGLY_APP_ID","\"a397701fd5\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            buildConfigField("boolean","LOG_DEBUG","true")
            buildConfigField("String","BUGLY_APP_ID","\"272afe1108\"")
        }
    }

    /*渠道信息配置*/
    productFlavors {
        buildVersion {
            //不同渠道，不同包名
            applicationId "com.fast.adnroid.test"
            signingConfig signingConfigs.buildVersion
            versionCode 434 //该渠道属于测试渠道，不走commit逻辑，避免fabric被污染
            manifestPlaceholders = [ISTEST_VALUE: "TEST", CHANNEL_VALUE: name,PACKAGE_NAME: applicationId]
        }

        gp {
            applicationId "com.fast.adnroid"
            manifestPlaceholders = [ISTEST_VALUE: "PRD", CHANNEL_VALUE: name, PACKAGE_NAME: applicationId]
        }


        hawk {
            applicationId "com.fast.adnroid"
            manifestPlaceholders = [ISTEST_VALUE: "PRD", CHANNEL_VALUE: name, PACKAGE_NAME: applicationId]
        }

    }

    //修改apk输出名字格式
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def appName = "FastAndroid"
                def flavorsName = variant.productFlavors[0].name
                def code = rootProject.ext.versionCode
                if (flavorsName.equals("buildVersion")) {
                    code = 434
                }else {
                }
                def pubversionName = defaultConfig.versionName + "." + code
                def buildTypeName = buildType.name

                def time = getDate();
                def fileName = "Module_${appName}_${pubversionName}_${time}_${flavorsName}_${buildTypeName}.apk"

                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }


}


def getDate() {
    def date = new Date()
    def formattedDate = date.format('MMddHHmm')
    return formattedDate
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':library')
    compile dep.glide
    compile dep.appcompatV7
    compile dep.multidex
    compile dep.bugly


}
