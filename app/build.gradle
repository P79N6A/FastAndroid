apply plugin: 'com.android.application'
apply plugin: 'AndResGuard'
apply from: rootProject.file('module.gradle')

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath dep.andResGuardPlugin
    }
}

repositories {
    mavenCentral()

    flatDir {
        dirs 'libs'
    }
}

def getAppVersionName() {
    return rootProject.ext.versionName
}

//commit次数作为版本号,因为commit只增不减
def getCommitVersionCode() {
    if (project.hasProperty("RELEASE")) {
        def cmd = "git rev-list HEAD --count"
        return cmd.execute().text.trim().toInteger()
    } else {
        return 13149
    }
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('MMddHHmmss')
    return formattedDate
}



andResGuard {
    mappingFile = null
    use7zip = true
    useSign = true
    keepRoot = false
    whiteList = [
            //for your icon
            "R.drawable.ic_launcher",
            //for umeng update
            "R.string.umeng*",
            "R.string.UM*",
            "R.string.tb_*",
            "R.layout.umeng*",
            "R.layout.tb_*",
            "R.drawable.umeng*",
            "R.drawable.tb_*",
            "R.anim.umeng*",
            "R.color.umeng*",
            "R.color.tb_*",
            "R.style.*UM*",
            "R.style.umeng*",
            "R.id.umeng*",

            //umeng share for sina
            "R.drawable.sina*",


    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
            "resources.arsc"
    ]
    sevenzip {
//        artifact = 'com.tencent.mm:SevenZip:1.1.8'
        artifact = 'com.tencent.mm:SevenZip:1.1.9'
        //path = "D:\\Program Files\\7-Zip\\7z.exe"
    }
}





android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.apache.fastandroid"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode getCommitVersionCode()
        versionName getAppVersionName()

        //archivesBaseName = "FastAndroid-$versionName"
        //dex突破65535的限制
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }


    splits {
        density {
            enable true
            //清除默认的屏幕密度列表
            reset()
            //指定生成xhdpi的apk 减少包大小
            include 'xhdpi'
        }
    }

    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }


    signingConfigs {
        dev {
            storeFile file('debug.jks')
            storePassword '654321'
            keyAlias 'jerry321'
            keyPassword 'jerrry123'

        }
        gp { // 外发包 签名
            storeFile file('release.jks')
            storePassword '123456'
            keyAlias 'jerry123'
            keyPassword 'jerry321'
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            buildConfigField("boolean","LOG_DEBUG","false")
            buildConfigField("String","BUGLY_APP_ID","\"a397701fd5\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        debug {
            minifyEnabled false
            buildConfigField("boolean","LOG_DEBUG","true")
            buildConfigField("String","BUGLY_APP_ID","\"272afe1108\"")
        }
    }

    /*渠道信息配置*/
    productFlavors {
        dev {
            //不同渠道，不同包名
            applicationId "com.fast.adnroid.test"
            signingConfig signingConfigs.dev
            versionCode 434 //该渠道属于测试渠道，不走commit逻辑，避免fabric被污染
            manifestPlaceholders = [ISTEST_VALUE: "TEST", CHANNEL_VALUE: name,PACKAGE_NAME: applicationId]
        }
        if (isAllDebug.toBoolean()){
            gp {
                applicationId "com.fast.adnroid"
                signingConfig signingConfigs.gp
                manifestPlaceholders = [ISTEST_VALUE: "PRD", CHANNEL_VALUE: name, PACKAGE_NAME: applicationId]
            }
        }
    }
    /**
     * release构建忽略dev这一个渠道
     */
    variantFilter { variant ->
        if (variant.buildType.name.equals('release')) {
            variant.getFlavors().each() { flavor ->
                if (flavor.name.equals('dev')){
                    variant.setIgnore(true);
                }
            }
        }
    }

    //修改apk输出名字格式
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (variant.buildType.name.equals("release")){
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def appName = "FastAndroid"
                    def flavorsName = variant.productFlavors[0].name
                    def code = getCommitVersionCode()
                    //测试版本code固定用434 防止bug统计平台被污染
                    if (flavorsName.equals("dev")) {
                        code = 434
                    }else {
                    }
                    def pubversionName = defaultConfig.versionName + "." + code
                    def buildTypeName = buildType.name


                    def time = getDate();
                    def fileName = "Module_${appName}_${pubversionName}_${time}_${flavorsName}_${buildTypeName}.apk"
                    def str = "flavorsName = $flavorsName,time = $time, code = $code, buildTypeName = $buildTypeName";
                    println str
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }
    }


    


}






dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //compile project(':library')
    compile dep.glide
    compile dep.appcompatV7
    compile dep.multidex
    /*compile dep.bugly*/

    compile_library(getProject())

    compile dep.junit
    compile 'io.taig.android:parcelable_2.11:3.0.0-BETA1'


    compile 'io.reactivex:rxandroid:1.2.0'
    compile 'io.reactivex:rxjava:1.1.5'
}
